{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","api.js","App.jsx","index.js"],"names":["TodoList","state","filterTodos","select","search","searchSelect","value","content","filter","props","todos","todo","title","includes","completed","selectFind","active","setState","complete","prevProps","a","this","userId","findUserId","className","placeholder","onChange","event","target","map","key","id","type","readOnly","checked","onClick","React","Component","CurrentUser","user","localeUser","url","fetch","then","response","json","users","data","name","email","phone","clearUser","App","selectedUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f81a60a.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    filterTodos: [],\n    select: 'all',\n    search: '',\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (prevProps.todos !== this.props.todos) {\n      this.setState({ filterTodos: this.props.todos })\n    }\n  }\n\n  searchSelect = (value, content) => {\n    const filter = this.props.todos.filter(todo => todo.title !== null && todo.title !== '');\n    let find = '';\n\n    value === 'all'\n      ? find = filter.filter(todo => todo.title.includes(content))\n      : find = filter.filter(todo => (\n        todo.completed === (value === 'active' ? false : true) && (\n          todo.title.includes(content))\n      ))\n\n    return find;\n  }\n\n  selectFind = (value) => {\n    const { todos } = this.props;\n\n    if (value === 'completed') {\n      const active = todos.filter(todo => todo.completed === true)\n      this.setState({ filterTodos: active })\n    } else if (value === 'active') {\n      const complete = todos.filter(todo => todo.completed === false)\n      this.setState({ filterTodos: complete })\n    } else {\n      this.setState({ filterTodos: todos })\n    }\n  }\n\n  render() {\n    const { userId, findUserId } = this.props;\n    const { filterTodos, select, search } = this.state;\n\n    return (\n      <div className=\"TodoList\">\n        <input\n          value={search}\n          placeholder=\"search Title\"\n          onChange={(event) => {\n            this.setState({\n              search: event.target.value,\n              filterTodos: this.searchSelect(select, event.target.value),\n            });\n          }}\n        />\n\n        <select\n          value={select}\n          onChange={(event) => {\n            this.setState({ select: event.target.value });\n            this.selectFind(event.target.value);\n          }}\n        >\n          <option value=\"all\">\n            all\n          </option>\n\n          <option value=\"active\">\n            active\n          </option>\n\n          <option value=\"completed\">\n            completed\n          </option>\n        </select>\n\n        <h2>Todos:</h2>\n\n        {filterTodos.map(todo => (\n          <div\n            className=\"TodoList__list-container\"\n            key={todo.id}\n          >\n            <ul className=\"TodoList__list\">\n              <li\n                className={`TodoList__item\n                  ${todo.completed\n                    ? 'TodoList__item--checked'\n                    : 'TodoList__item--unchecked'\n                  }\n                `}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    readOnly\n                    checked={\n                      !!todo.completed\n                    }\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className={\n                    `TodoList__user-button\n                    ${todo.userId === userId\n                    && 'TodoList__user-button--selected'\n                    }\n                    button`\n                  }\n                  type=\"button\"\n                  onClick={() => findUserId(todo.userId)}\n                >\n                  User&nbsp;\n                  {todo.userId}\n                </button>\n              </li>\n            </ul>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './CurrentUser.scss';\nimport { getUser } from '../../api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n  }\n\n  componentDidMount() {\n    this.localeUser();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.localeUser();\n    }\n  }\n\n  async localeUser() {\n    getUser(this.props.userId)\n      .then((users) => {\n        this.setState({ user: users.data });\n      });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <>\n        {this.state.user !== null\n          ? (\n            <div className=\"CurrentUser\">\n              <h2 className=\"CurrentUser__title\">\n                <span>\n                  Selected user:\n                  {user.id}\n                </span>\n              </h2>\n\n              <h3 className=\"CurrentUser__name\">{user.name}</h3>\n              <p className=\"CurrentUser__email\">{user.email}</p>\n              <p className=\"CurrentUser__phone\">{user.phone}</p>\n\n              {this.props.userId !== 0 && (\n                <button\n                  className=\"TodoList__user-button button\"\n                  type=\"button\"\n                  onClick={() => this.props.clearUser()}\n                >\n                  Clear\n                </button>\n              )}\n            </div>\n          )\n          : 'User not a found'\n        }\n      </>\n    );\n  }\n}\n","export const getTodos = () => (\n  fetch('https://mate-api.herokuapp.com/todos')\n    .then(response => response.json())\n);\n\nexport const getUser = url => (\n  fetch(`https://mate-api.herokuapp.com/users/${url}`)\n    .then(response => response.json())\n);\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    getTodos().then((todos) => {\n      this.setState({ todos: todos.data });\n    });\n  }\n\n  findUserId = (userId) => {\n    if (this.state.selectedUserId === userId) {\n      return;\n    }\n\n    this.setState({ selectedUserId: userId });\n  }\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            userId={selectedUserId}\n            findUserId={this.findUserId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}